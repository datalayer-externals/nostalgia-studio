/**
 * Design Tokens
 * Autogenerated from tokens.json.
 * DO NOT EDIT!
 */

import {
  ColorToken,
  DimensionToken,
  FontToken,
  ParsedColorToken,
  ParsedDimensionToken,
  ParsedFontToken,
  ParsedShadowToken,
  ShadowToken,
} from '@cobalt-ui/core';

export declare const tokens: {
  'palette.black': ColorToken['$value'];
  'palette.white': ColorToken['$value'];
  'palette.gray25': ColorToken['$value'];
  'palette.gray50': ColorToken['$value'];
  'palette.gray100': ColorToken['$value'];
  'palette.gray200': ColorToken['$value'];
  'palette.gray300': ColorToken['$value'];
  'palette.gray400': ColorToken['$value'];
  'palette.gray500': ColorToken['$value'];
  'palette.gray600': ColorToken['$value'];
  'palette.gray700': ColorToken['$value'];
  'palette.gray800': ColorToken['$value'];
  'palette.gray900': ColorToken['$value'];
  'palette.grey50': ColorToken['$value'];
  'palette.grey100': ColorToken['$value'];
  'palette.grey200': ColorToken['$value'];
  'palette.grey300': ColorToken['$value'];
  'palette.grey400': ColorToken['$value'];
  'palette.grey500': ColorToken['$value'];
  'palette.grey600': ColorToken['$value'];
  'palette.grey700': ColorToken['$value'];
  'palette.grey800': ColorToken['$value'];
  'palette.grey900': ColorToken['$value'];
  'palette.teal50': ColorToken['$value'];
  'palette.teal100': ColorToken['$value'];
  'palette.teal200': ColorToken['$value'];
  'palette.teal300': ColorToken['$value'];
  'palette.teal400': ColorToken['$value'];
  'palette.teal500': ColorToken['$value'];
  'palette.teal600': ColorToken['$value'];
  'palette.teal700': ColorToken['$value'];
  'palette.teal800': ColorToken['$value'];
  'palette.teal900': ColorToken['$value'];
  'palette.green50': ColorToken['$value'];
  'palette.green100': ColorToken['$value'];
  'palette.green200': ColorToken['$value'];
  'palette.green300': ColorToken['$value'];
  'palette.green400': ColorToken['$value'];
  'palette.green500': ColorToken['$value'];
  'palette.green600': ColorToken['$value'];
  'palette.green700': ColorToken['$value'];
  'palette.green800': ColorToken['$value'];
  'palette.green900': ColorToken['$value'];
  'palette.blue50': ColorToken['$value'];
  'palette.blue100': ColorToken['$value'];
  'palette.blue200': ColorToken['$value'];
  'palette.blue300': ColorToken['$value'];
  'palette.blue400': ColorToken['$value'];
  'palette.blue500': ColorToken['$value'];
  'palette.blue600': ColorToken['$value'];
  'palette.blue700': ColorToken['$value'];
  'palette.blue800': ColorToken['$value'];
  'palette.blue900': ColorToken['$value'];
  'palette.orange50': ColorToken['$value'];
  'palette.orange100': ColorToken['$value'];
  'palette.orange200': ColorToken['$value'];
  'palette.orange300': ColorToken['$value'];
  'palette.orange400': ColorToken['$value'];
  'palette.orange500': ColorToken['$value'];
  'palette.orange600': ColorToken['$value'];
  'palette.orange700': ColorToken['$value'];
  'palette.orange800': ColorToken['$value'];
  'palette.orange900': ColorToken['$value'];
  'palette.red50': ColorToken['$value'];
  'palette.red100': ColorToken['$value'];
  'palette.red200': ColorToken['$value'];
  'palette.red300': ColorToken['$value'];
  'palette.red400': ColorToken['$value'];
  'palette.red500': ColorToken['$value'];
  'palette.red600': ColorToken['$value'];
  'palette.red700': ColorToken['$value'];
  'palette.red800': ColorToken['$value'];
  'palette.red900': ColorToken['$value'];
  'color.brand.primary': ColorToken['$value'];
  'color.brand.light': ColorToken['$value'];
  'color.brand.lighter': ColorToken['$value'];
  'color.brand.dark': ColorToken['$value'];
  'color.brand.darker': ColorToken['$value'];
  'color.background.default': ColorToken['$value'];
  'color.background.hover': ColorToken['$value'];
  'color.background.dark': ColorToken['$value'];
  'color.text.body': ColorToken['$value'];
  'color.text.muted': ColorToken['$value'];
  'color.text.error': ColorToken['$value'];
  'color.text.link': ColorToken['$value'];
  'color.border.light': ColorToken['$value'];
  'color.border.muted': ColorToken['$value'];
  'spacing.spacer.zero': DimensionToken['$value'];
  'spacing.spacer.xs': DimensionToken['$value'];
  'spacing.spacer.sm': DimensionToken['$value'];
  'spacing.spacer.md': DimensionToken['$value'];
  'spacing.spacer.lg': DimensionToken['$value'];
  'spacing.spacer.xl': DimensionToken['$value'];
  'spacing.spacer.xxl': DimensionToken['$value'];
  'size.borderRadius.xs': DimensionToken['$value'];
  'size.borderRadius.sm': DimensionToken['$value'];
  'size.borderRadius.md': DimensionToken['$value'];
  'size.borderRadius.lg': DimensionToken['$value'];
  'size.borderRadius.xl': DimensionToken['$value'];
  'shadow.sm': ShadowToken['$value'];
  'shadow.md': ShadowToken['$value'];
  'shadow.lg': ShadowToken['$value'];
  'font.family.system': FontToken['$value'];
  'font.family.monospace': FontToken['$value'];
  'font.family.display': FontToken['$value'];
  'font.family.size.f00': DimensionToken['$value'];
  'font.family.size.f0': DimensionToken['$value'];
  'font.family.size.f1': DimensionToken['$value'];
  'font.family.size.f2': DimensionToken['$value'];
  'font.family.size.f3': DimensionToken['$value'];
  'font.family.size.f4': DimensionToken['$value'];
  'font.family.size.f5': DimensionToken['$value'];
  'font.family.size.f6': DimensionToken['$value'];
  'font.family.lineHeight.xs': DimensionToken['$value'];
  'font.family.lineHeight.sm': DimensionToken['$value'];
  'font.family.lineHeight.md': DimensionToken['$value'];
  'font.family.lineHeight.default': DimensionToken['$value'];
  'font.family.lineHeight.lg': DimensionToken['$value'];
  'font.family.lineHeight.xl': DimensionToken['$value'];
};

export declare const meta: {
  'palette.black': ParsedColorToken & { $extensions: { mode: typeof modes['palette.black'] } };
  'palette.white': ParsedColorToken & { $extensions: { mode: typeof modes['palette.white'] } };
  'palette.gray25': ParsedColorToken & { $extensions: { mode: typeof modes['palette.gray25'] } };
  'palette.gray50': ParsedColorToken & { $extensions: { mode: typeof modes['palette.gray50'] } };
  'palette.gray100': ParsedColorToken & { $extensions: { mode: typeof modes['palette.gray100'] } };
  'palette.gray200': ParsedColorToken & { $extensions: { mode: typeof modes['palette.gray200'] } };
  'palette.gray300': ParsedColorToken & { $extensions: { mode: typeof modes['palette.gray300'] } };
  'palette.gray400': ParsedColorToken & { $extensions: { mode: typeof modes['palette.gray400'] } };
  'palette.gray500': ParsedColorToken & { $extensions: { mode: typeof modes['palette.gray500'] } };
  'palette.gray600': ParsedColorToken & { $extensions: { mode: typeof modes['palette.gray600'] } };
  'palette.gray700': ParsedColorToken & { $extensions: { mode: typeof modes['palette.gray700'] } };
  'palette.gray800': ParsedColorToken & { $extensions: { mode: typeof modes['palette.gray800'] } };
  'palette.gray900': ParsedColorToken & { $extensions: { mode: typeof modes['palette.gray900'] } };
  'palette.grey50': ParsedColorToken & { $extensions: { mode: typeof modes['palette.grey50'] } };
  'palette.grey100': ParsedColorToken & { $extensions: { mode: typeof modes['palette.grey100'] } };
  'palette.grey200': ParsedColorToken & { $extensions: { mode: typeof modes['palette.grey200'] } };
  'palette.grey300': ParsedColorToken & { $extensions: { mode: typeof modes['palette.grey300'] } };
  'palette.grey400': ParsedColorToken & { $extensions: { mode: typeof modes['palette.grey400'] } };
  'palette.grey500': ParsedColorToken & { $extensions: { mode: typeof modes['palette.grey500'] } };
  'palette.grey600': ParsedColorToken & { $extensions: { mode: typeof modes['palette.grey600'] } };
  'palette.grey700': ParsedColorToken & { $extensions: { mode: typeof modes['palette.grey700'] } };
  'palette.grey800': ParsedColorToken & { $extensions: { mode: typeof modes['palette.grey800'] } };
  'palette.grey900': ParsedColorToken & { $extensions: { mode: typeof modes['palette.grey900'] } };
  'palette.teal50': ParsedColorToken & { $extensions: { mode: typeof modes['palette.teal50'] } };
  'palette.teal100': ParsedColorToken & { $extensions: { mode: typeof modes['palette.teal100'] } };
  'palette.teal200': ParsedColorToken & { $extensions: { mode: typeof modes['palette.teal200'] } };
  'palette.teal300': ParsedColorToken & { $extensions: { mode: typeof modes['palette.teal300'] } };
  'palette.teal400': ParsedColorToken & { $extensions: { mode: typeof modes['palette.teal400'] } };
  'palette.teal500': ParsedColorToken & { $extensions: { mode: typeof modes['palette.teal500'] } };
  'palette.teal600': ParsedColorToken & { $extensions: { mode: typeof modes['palette.teal600'] } };
  'palette.teal700': ParsedColorToken & { $extensions: { mode: typeof modes['palette.teal700'] } };
  'palette.teal800': ParsedColorToken & { $extensions: { mode: typeof modes['palette.teal800'] } };
  'palette.teal900': ParsedColorToken & { $extensions: { mode: typeof modes['palette.teal900'] } };
  'palette.green50': ParsedColorToken & { $extensions: { mode: typeof modes['palette.green50'] } };
  'palette.green100': ParsedColorToken & { $extensions: { mode: typeof modes['palette.green100'] } };
  'palette.green200': ParsedColorToken & { $extensions: { mode: typeof modes['palette.green200'] } };
  'palette.green300': ParsedColorToken & { $extensions: { mode: typeof modes['palette.green300'] } };
  'palette.green400': ParsedColorToken & { $extensions: { mode: typeof modes['palette.green400'] } };
  'palette.green500': ParsedColorToken & { $extensions: { mode: typeof modes['palette.green500'] } };
  'palette.green600': ParsedColorToken & { $extensions: { mode: typeof modes['palette.green600'] } };
  'palette.green700': ParsedColorToken & { $extensions: { mode: typeof modes['palette.green700'] } };
  'palette.green800': ParsedColorToken & { $extensions: { mode: typeof modes['palette.green800'] } };
  'palette.green900': ParsedColorToken & { $extensions: { mode: typeof modes['palette.green900'] } };
  'palette.blue50': ParsedColorToken & { $extensions: { mode: typeof modes['palette.blue50'] } };
  'palette.blue100': ParsedColorToken & { $extensions: { mode: typeof modes['palette.blue100'] } };
  'palette.blue200': ParsedColorToken & { $extensions: { mode: typeof modes['palette.blue200'] } };
  'palette.blue300': ParsedColorToken & { $extensions: { mode: typeof modes['palette.blue300'] } };
  'palette.blue400': ParsedColorToken & { $extensions: { mode: typeof modes['palette.blue400'] } };
  'palette.blue500': ParsedColorToken & { $extensions: { mode: typeof modes['palette.blue500'] } };
  'palette.blue600': ParsedColorToken & { $extensions: { mode: typeof modes['palette.blue600'] } };
  'palette.blue700': ParsedColorToken & { $extensions: { mode: typeof modes['palette.blue700'] } };
  'palette.blue800': ParsedColorToken & { $extensions: { mode: typeof modes['palette.blue800'] } };
  'palette.blue900': ParsedColorToken & { $extensions: { mode: typeof modes['palette.blue900'] } };
  'palette.orange50': ParsedColorToken & { $extensions: { mode: typeof modes['palette.orange50'] } };
  'palette.orange100': ParsedColorToken & { $extensions: { mode: typeof modes['palette.orange100'] } };
  'palette.orange200': ParsedColorToken & { $extensions: { mode: typeof modes['palette.orange200'] } };
  'palette.orange300': ParsedColorToken & { $extensions: { mode: typeof modes['palette.orange300'] } };
  'palette.orange400': ParsedColorToken & { $extensions: { mode: typeof modes['palette.orange400'] } };
  'palette.orange500': ParsedColorToken & { $extensions: { mode: typeof modes['palette.orange500'] } };
  'palette.orange600': ParsedColorToken & { $extensions: { mode: typeof modes['palette.orange600'] } };
  'palette.orange700': ParsedColorToken & { $extensions: { mode: typeof modes['palette.orange700'] } };
  'palette.orange800': ParsedColorToken & { $extensions: { mode: typeof modes['palette.orange800'] } };
  'palette.orange900': ParsedColorToken & { $extensions: { mode: typeof modes['palette.orange900'] } };
  'palette.red50': ParsedColorToken & { $extensions: { mode: typeof modes['palette.red50'] } };
  'palette.red100': ParsedColorToken & { $extensions: { mode: typeof modes['palette.red100'] } };
  'palette.red200': ParsedColorToken & { $extensions: { mode: typeof modes['palette.red200'] } };
  'palette.red300': ParsedColorToken & { $extensions: { mode: typeof modes['palette.red300'] } };
  'palette.red400': ParsedColorToken & { $extensions: { mode: typeof modes['palette.red400'] } };
  'palette.red500': ParsedColorToken & { $extensions: { mode: typeof modes['palette.red500'] } };
  'palette.red600': ParsedColorToken & { $extensions: { mode: typeof modes['palette.red600'] } };
  'palette.red700': ParsedColorToken & { $extensions: { mode: typeof modes['palette.red700'] } };
  'palette.red800': ParsedColorToken & { $extensions: { mode: typeof modes['palette.red800'] } };
  'palette.red900': ParsedColorToken & { $extensions: { mode: typeof modes['palette.red900'] } };
  'color.brand.primary': ParsedColorToken;
  'color.brand.light': ParsedColorToken;
  'color.brand.lighter': ParsedColorToken;
  'color.brand.dark': ParsedColorToken;
  'color.brand.darker': ParsedColorToken;
  'color.background.default': ParsedColorToken;
  'color.background.hover': ParsedColorToken;
  'color.background.dark': ParsedColorToken;
  'color.text.body': ParsedColorToken;
  'color.text.muted': ParsedColorToken;
  'color.text.error': ParsedColorToken;
  'color.text.link': ParsedColorToken;
  'color.border.light': ParsedColorToken;
  'color.border.muted': ParsedColorToken;
  'spacing.spacer.zero': ParsedDimensionToken;
  'spacing.spacer.xs': ParsedDimensionToken;
  'spacing.spacer.sm': ParsedDimensionToken;
  'spacing.spacer.md': ParsedDimensionToken;
  'spacing.spacer.lg': ParsedDimensionToken;
  'spacing.spacer.xl': ParsedDimensionToken;
  'spacing.spacer.xxl': ParsedDimensionToken;
  'size.borderRadius.xs': ParsedDimensionToken;
  'size.borderRadius.sm': ParsedDimensionToken;
  'size.borderRadius.md': ParsedDimensionToken;
  'size.borderRadius.lg': ParsedDimensionToken;
  'size.borderRadius.xl': ParsedDimensionToken;
  'shadow.sm': ParsedShadowToken;
  'shadow.md': ParsedShadowToken;
  'shadow.lg': ParsedShadowToken;
  'font.family.system': ParsedFontToken;
  'font.family.monospace': ParsedFontToken;
  'font.family.display': ParsedFontToken;
  'font.family.size.f00': ParsedDimensionToken & { $extensions: { mode: typeof modes['font.family.size.f00'] } };
  'font.family.size.f0': ParsedDimensionToken & { $extensions: { mode: typeof modes['font.family.size.f0'] } };
  'font.family.size.f1': ParsedDimensionToken & { $extensions: { mode: typeof modes['font.family.size.f1'] } };
  'font.family.size.f2': ParsedDimensionToken & { $extensions: { mode: typeof modes['font.family.size.f2'] } };
  'font.family.size.f3': ParsedDimensionToken & { $extensions: { mode: typeof modes['font.family.size.f3'] } };
  'font.family.size.f4': ParsedDimensionToken & { $extensions: { mode: typeof modes['font.family.size.f4'] } };
  'font.family.size.f5': ParsedDimensionToken & { $extensions: { mode: typeof modes['font.family.size.f5'] } };
  'font.family.size.f6': ParsedDimensionToken & { $extensions: { mode: typeof modes['font.family.size.f6'] } };
  'font.family.lineHeight.xs': ParsedDimensionToken;
  'font.family.lineHeight.sm': ParsedDimensionToken;
  'font.family.lineHeight.md': ParsedDimensionToken;
  'font.family.lineHeight.default': ParsedDimensionToken;
  'font.family.lineHeight.lg': ParsedDimensionToken;
  'font.family.lineHeight.xl': ParsedDimensionToken;
};

export declare const modes: {
  'palette.black': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.white': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.gray25': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.gray50': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.gray100': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.gray200': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.gray300': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.gray400': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.gray500': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.gray600': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.gray700': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.gray800': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.gray900': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.grey50': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.grey100': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.grey200': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.grey300': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.grey400': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.grey500': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.grey600': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.grey700': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.grey800': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.grey900': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.teal50': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.teal100': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.teal200': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.teal300': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.teal400': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.teal500': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.teal600': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.teal700': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.teal800': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.teal900': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.green50': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.green100': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.green200': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.green300': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.green400': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.green500': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.green600': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.green700': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.green800': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.green900': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.blue50': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.blue100': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.blue200': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.blue300': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.blue400': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.blue500': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.blue600': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.blue700': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.blue800': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.blue900': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.orange50': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.orange100': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.orange200': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.orange300': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.orange400': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.orange500': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.orange600': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.orange700': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.orange800': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.orange900': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.red50': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.red100': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.red200': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.red300': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.red400': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.red500': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.red600': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.red700': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.red800': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'palette.red900': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'font.family.size.f00': {
    mobile: DimensionToken['$value'];
    desktop: DimensionToken['$value'];
  };
  'font.family.size.f0': {
    mobile: DimensionToken['$value'];
    desktop: DimensionToken['$value'];
  };
  'font.family.size.f1': {
    mobile: DimensionToken['$value'];
    desktop: DimensionToken['$value'];
  };
  'font.family.size.f2': {
    mobile: DimensionToken['$value'];
    desktop: DimensionToken['$value'];
  };
  'font.family.size.f3': {
    mobile: DimensionToken['$value'];
    desktop: DimensionToken['$value'];
  };
  'font.family.size.f4': {
    mobile: DimensionToken['$value'];
    desktop: DimensionToken['$value'];
  };
  'font.family.size.f5': {
    mobile: DimensionToken['$value'];
    desktop: DimensionToken['$value'];
  };
  'font.family.size.f6': {
    mobile: DimensionToken['$value'];
    desktop: DimensionToken['$value'];
  };
};

export declare function token(tokenID: keyof typeof tokens, modeName?: never): typeof tokens[typeof tokenID];
export declare function token(tokenID: keyof typeof modes, modeName?: keyof typeof modes[typeof tokenID]): typeof modes[typeof tokenID];
